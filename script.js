///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////7
//////////////////////////////////////Paramètre de la carte//////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

var southWest = L.latLng(46.5, 6.6),
    northEast = L.latLng(46.1, 7.5),
    bounds = L.latLngBounds(southWest, northEast);

	var googleSat = L.tileLayer('http://{s}.google.com/vt/lyrs=s&x={x}&y={y}&z={z}',{
		maxBounds:bounds,
		minZoom:10.5,
		maxZoom: 22,
		subdomains:['mt0','mt1','mt2','mt3']
	});


	var OSM_Sombre = L.tileLayer('https://{s}.tile.jawg.io/jawg-matrix/{z}/{x}/{y}{r}.png?access-token={accessToken}', {
		attribution: '<a href="http://jawg.io" title="Tiles Courtesy of Jawg Maps" target="_blank">&copy; <b>Jawg</b>Maps</a> &copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors',
		minZoom:10.5,
		maxZoom: 22,
		subdomains: 'abcd',
		maxBounds: bounds,
		accessToken: 'PC2JcrjT5SXkrWg5SDm4ezZKZJoZyNxzqAQ41pkWxK7DonJJV4zK76ZCcRVtfVfn'
	});

	var Img_sat = L.tileLayer('http://{s}.google.com/vt/lyrs=s&x={x}&y={y}&z={z}',{
			minZoom:10.5,
			maxZoom: 22,
			maxBounds: bounds,
			subdomains:['mt0','mt1','mt2','mt3']
		});
	
	var esri = L.tileLayer('https://server.arcgisonline.com/ArcGIS/rest/services/World_Topo_Map/MapServer/tile/{z}/{y}/{x}', {
		attribution: 'Tiles &copy; Esri &mdash; Esri, DeLorme, NAVTEQ, TomTom, Intermap, iPC, USGS, FAO, NPS, NRCAN, GeoBase, Kadaster NL, Ordnance Survey, Esri Japan, METI, Esri China (Hong Kong), and the GIS User Community',
		minZoom:10.5,
		maxZoom: 22,
		maxBounds: bounds,
		});
	
	var osmCh = L.tileLayer('https://tile.osm.ch/switzerland/{z}/{x}/{y}.png', {
		minZoom:10.5,
		maxZoom: 22,
		attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors',
		maxBounds: bounds,
		});


	var ndvi_01 =L.tileLayer('file:///C%3A/Users/user/Desktop/tiles_ndvi/01_2022/{z}/{x}/{y}.png', {
        minZoom: 10,
        maxZoom: 14,
        tms: false,
        attribution: 'Generated by TilesXYZ'
      });

	var ndvi_03=L.tileLayer('file:///C%3A/Users/user/Desktop/tiles_ndvi/03_2022/{z}/{x}/{y}.png', {
        minZoom: 10,
        maxZoom: 14,
        tms: false,
        attribution: 'Generated by TilesXYZ'
      });
	
	var ndvi_05=L.tileLayer('file:///C%3A/Users/user/Desktop/tiles_ndvi/05_2022/{z}/{x}/{y}.png', {
        minZoom: 10,
        maxZoom: 14,
        tms: false,
        attribution: 'Generated by TilesXYZ'
      });

	var ndvi_07=L.tileLayer('file:///C%3A/Users/user/Desktop/tiles_ndvi/07_2022/{z}/{x}/{y}.png', {
        minZoom: 10,
        maxZoom: 14,
        tms: false,
        attribution: 'Generated by TilesXYZ'
      });
	
	var ndvi_09 =L.tileLayer('file:///C%3A/Users/user/Desktop/tiles_ndvi/09_2022/{z}/{x}/{y}.png', {
        minZoom: 10,
        maxZoom: 14,
        tms: false,
        attribution: 'Generated by TilesXYZ'
      });

	var ndvi_10= L.tileLayer('file:///C%3A/Users/user/Desktop/tiles_ndvi/10_2022/{z}/{x}/{y}.png', {
        minZoom: 10,
        maxZoom: 14,
        tms: false,
        attribution: 'Generated by TilesXYZ'
      });
	
	var ndvi_12= L.tileLayer('file:///C%3A/Users/user/Desktop/tiles_ndvi/12_2022/{z}/{x}/{y}.png', {
        minZoom: 10,
        maxZoom: 14,
        tms: false,
        attribution: 'Generated by TilesXYZ'
      });
	
	var mnt =  L.tileLayer('file:///C%3A/Users/user/Desktop/mtn_tile/{z}/{x}/{y}.png', {
        minZoom: 10,
        maxZoom: 14,
        tms: false,
        attribution: 'Generated by TilesXYZ'
      });
	


		


	//////////Definition de nos couche de bases////////////////
	var baseLayers = {
		"sat": googleSat,
		"sat2": Img_sat,
		"OSM": osmCh,
		"osm_sombre" : OSM_Sombre,
		"Esri": esri,
		"ndvi_01": ndvi_01,
		"ndvi_03": ndvi_03,
		"ndvi_05": ndvi_05,
		"ndvi_07": ndvi_07,
		"ndvi_09": ndvi_09,
		"ndvi_10": ndvi_10,
		"ndvi_12": ndvi_12,
		"mnt":mnt

		};

		var style_dis_aigle= {
			fillColor: '#800026',
			fillOpacity: 0,
			weight:1
		   };

		var style__hors_dis_aigle= {
			fillColor: 'black',
			fillOpacity: 0.2,
			weight:0
		   };

	var map = 	L.map('Map',{layers:esri,maxBounds:bounds,pmIgnore: false}).setView([46.32, 7.15], 11);
	L.Map.include({
		'clearLayers': function () {
		  this.eachLayer(function (layer) {
			this.removeLayer(layer);
		  }, this);
		}
	  });
	
	  function refresh(){
		location.reload();

	  }



	
	

	////// Ajout de la délimitation du district d'aigle 
	var DA =	L.geoJSON(district_Aigle, 
					{style:style_dis_aigle,

						onEachFeature: function onEachFeature(feature, layer) {
							layer.on('click', function(){
							layer.bindPopup('<strong>' + "District d'" +feature.properties.NAME)})}						
					}).addTo(map);

					L.geoJSON(hors_DA, 
						{style:style__hors_dis_aigle,
	
							onEachFeature: function onEachFeature(feature, layer) {
								layer.on('click', function(){
								layer.bindPopup('<strong>' + "District d'" +feature.properties.NAME)})}						
						}).addTo(map);

						var browserControl = L.control.browserPrint({position: 'bottomleft'}).addTo(map);

	//Add baseLayers to map as control layers
		c = L.control.layers(baseLayers);

	//ajout d'échelle et du zoom sur la carte
		zoom =L.control.zoom({
			position: 'bottomleft'
			}).addTo(map);
		
		scale =	L.control.scale({
			position:"bottomleft"
			}).addTo(map);
	
		map.removeControl(map.zoomControl);




//////////////////// fonction qui permettent d'ajouter de l'interactivité au niveau de la carte 
/// permet de mettre en surbrillance certains élément lorsque le curseur passe au dessus
function highlightFeature(e) {
    var layer = e.target;

    layer.setStyle({
        weight: 5,
        color: '#666',
        dashArray: '',
        fillOpacity: 0.7
    });

    layer.bringToFront();
}

function resetHighlight(e) {
    naissance.resetStyle(e.target);
}

/// permet de zoomer sur une entité lorsqu'on clique dessus
function zoomToFeature(e) {
    map.fitBounds(e.target.getBounds());
}





/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////SIDEBAR////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	 //Fonction qui permet d'ouvrir et de fermer notre sidebar 
	 function openNav() {
		document.getElementById("mySidebar").style.width = "375px";
		document.getElementById("Title").style.marginLeft = "375px";

	  }
	  
	  function closeNav() {
		document.getElementById("mySidebar").style.width = "0";
		document.getElementById("Title").style.marginLeft= "0";
	  }	
	  


/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////// Les fonction permettant d'ouvrir l'onglet de selection lié aux fonds de cartes////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	  function openFdc() {
		document.getElementById("OuvrirFdc").style.height = "305px";
		document.getElementById("fdc").style.height = "300px";
		document.getElementById("fdc").style.backgroundColor = '#f1f1f1' ; 
		document.getElementById("OuvrirFdc").style.backgroundColor = '#f1f1f1' ; 
		document.getElementById("boutonFdc").style.backgroundColor = 'grey' ; 
		document.getElementById("OuvrirFdc").style.borderBottomLeftRadius = '5px'; 
		document.getElementById("OuvrirFdc").style.borderBottomrightRadius = '5px'; 
		document.getElementById("OpenFdc").style.backgroundColor = 'grey' ;
		document.getElementById("OpenFdc").style.color = 'white' ;
	  };

//fonction qui permet d'ourir le fond de carte google satellite
		function OuvrirImg_sat() {

			map.eachLayer(function (layer) {
				map.removeLayer(layer);
			});

			//création de la nouvelle couche

			map.addLayer(DA);
			map.addLayer(Img_sat);
		};
			
//fonction qui permet d'ourir le fond de carte OSM
		function OuvrirImg_OSM(){

			map.eachLayer(function (layer) {
				map.removeLayer(layer);
			});

			//création de la nouvelle couche

			map.addLayer(DA);
			map.addLayer(OSM_Sombre);
	
		};

//fonction qui permet d'ourir le fond de carte Esri terrain
		function OuvrirImg_E(){

			map.eachLayer(function (layer) {
				map.removeLayer(layer);
			});

			//création de la nouvelle couche

			map.addLayer(DA);
			map.addLayer(esri);
		};

//fonction qui permet d'ourir le fond de carte OSM CH
		function OuvrirImg_OsmCH(){

			map.eachLayer(function (layer) {
				map.removeLayer(layer);
			});

			//création de la nouvelle couche
			map.addLayer(DA);
			map.addLayer(osmCh);
			
		};

//Fonction qui permet de fermet l'onglet de selection lié au fond de carte
	function closeFdc(){
		document.getElementById("OuvrirFdc").style.height = "0px";
		document.getElementById("fdc").style.height = "0px";
		document.getElementById("boutonFdc").style.backgroundColor = '#111' ; 
		document.getElementById("OpenFdc").style.backgroundColor = '#111' ;
		document.getElementById("OpenFdc").style.color = '#818181' ;
	}




///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////Fonction qui perment d'ouvrir et de fermer la section liée au données thématiques///////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	  function openDth() {
		document.getElementById("OuvrirDth").style.height = "260px";
		document.getElementById("OuvrirDth").style.backgroundColor = 'lightgrey' ; 
		document.getElementById("boutonDth").style.backgroundColor = 'grey' ; 
		document.getElementById("OuvrirDth").style.borderBottomLeftRadius = '5px'; 
		document.getElementById("OuvrirDth").style.borderBottomrightRadius = '5px'; 
		document.getElementById("OpenDth").style.backgroundColor = 'grey' ;
		document.getElementById("OpenDth").style.color = 'white' ;
	  }	;

	  function closeDth(){
		document.getElementById("OuvrirDth").style.height = "0px";
		document.getElementById("boutonDth").style.backgroundColor = '#111' ; 
		document.getElementById("OpenDth").style.backgroundColor = '#111' ;
		document.getElementById("OpenDth").style.color = '#818181' ;

	  };

	  // Fonction permettant de selectionner un thème de données
	  $(document).ready(function() {
		$('#choix_theme').on('change', function(e) {
		
			
		// Selection des données dont la thématique correspond à l'agriculture/////////////////////////////////////////////


		  if ($('#choix_theme').val() == 'Agriculture') {
			document.getElementById("Opt_Agriculture").style.height = "195px";
			$("#Opt_Agriculture").show();

			 $("#Opt_Economie").hide();
			 $("#Opt_Culture").hide();
			 $("#Opt_Demographie").hide();
			 $("#Opt_Environnement").hide();
			 $("#Opt_Territoire").hide();
			 $("#Opt_Tourisme").hide();
		 	 }


		// Selection des données dont la thématique correspond à la culture
		  else if ($('#choix_theme').val() == 'Culture') {
			document.getElementById("Opt_Culture").style.height = "190px";
			$("#Opt_Culture").show();

			$("#Opt_Agriculture").hide();
			$("#Opt_Economie").hide();
			$("#Opt_Demographie").hide();
			$("#Opt_Environnement").hide();
			$("#Opt_Territoire").hide();
			$("#Opt_Tourisme").hide();
			} 

		// Selection des données dont la thématique correspond à la demographie	
			else if ($('#choix_theme').val() == 'Demographie') {
				document.getElementById("Opt_Demographie").style.height = "200px";
				$("#Opt_Demographie").show();

				$("#Opt_Agriculture").hide();
				$("#Opt_Economie").hide();
				$("#Opt_Culture").hide();
				$("#Opt_Environnement").hide();
				$("#Opt_Territoire").hide();
				$("#Opt_Tourisme").hide();
			} 
		
		// Selection des données dont la thématique correspond à l'économie	
			else if ($('#choix_theme').val() == 'Economie') {
				document.getElementById("Opt_Economie").style.height = "200px";
				$("#Opt_Economie").show();

				 $("#Opt_Agriculture").hide();
				 $("#Opt_Culture").hide();
				 $("#Opt_Demographie").hide();
				 $("#Opt_Environnement").hide();
			 	$("#Opt_Territoire").hide();
			 	$("#Opt_Tourisme").hide();
				} 
		
			// Selection des données dont la thématique correspond à l'envrionnement	
				else if ($('#choix_theme').val() == 'Environnement') {
					document.getElementById("Opt_Environnement").style.height = "200px";
					$("#Opt_Environnement").show();

					 $("#Opt_Agriculture").hide();
					 $("#Opt_Culture").hide();
					 $("#Opt_Demographie").hide();
					 $("#Opt_Economie").hide();
					 $("#Opt_Territoire").hide();
				 	$("#Opt_Tourisme").hide();
				}

				// Selection des données dont la thématique correspond au territoire	
				else if ($('#choix_theme').val() == 'Territoire') {
					document.getElementById("Opt_Territoire").style.height = "200px";
					$("#Opt_Territoire").show();
	
					 $("#Opt_Agriculture").hide();
					 $("#Opt_Culture").hide();
					 $("#Opt_Demographie").hide();
					 $("#Opt_Economie").hide();
					 $("#Opt_Environnement").hide();
				 	$("#Opt_Tourisme").hide();
				}

				// Selection des données dont la thématique correspond au tourisme
				else if ($('#choix_theme').val() == 'Tourisme') {
					document.getElementById("Opt_Tourisme").style.height = "200px";
					$("#Opt_Tourisme").show();
	
					 $("#Opt_Agriculture").hide();
					 $("#Opt_Culture").hide();
					 $("#Opt_Demographie").hide();
					 $("#Opt_Economie").hide();
					 $("#Opt_Territoire").hide();
				 	$("#Opt_Environnement").hide();
				} 

		  		else {
					$("#Opt_Agriculture").hide();
					 $("#Opt_Culture").hide();
					 $("#Opt_Demographie").hide();
					 $("#Opt_Economie").hide();
					 $("#Opt_Territoire").hide();
					 $("#Opt_Tourisme").hide();
				 	$("#Opt_Environnement").hide();
		 		 }
		
				}).trigger('change');
			});




//////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Selection des données dont la thématique correspond à l'agriculture/////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

		function close_box_droite(){
			document.getElementById("box_droite").style.height = "0px";
		  };
		function close_box_droite_bas(){
			document.getElementById("box_droite_bas").style.height = "0px";
		  };
////////////////////////// paramètres permettant d'afficher les GeoJson liée aux zones agricoles à la carte //////////////////////////7//////
			

			var champs = 'image/agri.jpg'
			var style_zne_agri = {
				"color": "brown",
				"weight": 0.2,
				"opacity": 1,
				"fillColor": 'yellow',
			   };

// paramètres liés à l'interactivité des zones agri
			zne_agri = L.geoJSON(zones_agricoles, { 
				style:style_zne_agri,

				onEachFeature: function onEachFeature(feature, layer) {

					layer.on('mouseover', function () {
						this.setStyle({
						  'fillColor': '#d95f0e'
						});
					  });
					layer.on('mouseout', function () {
						this.setStyle({
						  'fillColor': 'yellow'
						});
					  });

					  layer.on({click:zoomToFeature});

					layer.on('click', function(){
						document.getElementById("box_droite").style.height = "400px";
						$("#znes_agric1").html('<h4>Surfaces agricoles</h4>'+
						'<img width="150" alt="bla" height="150" src="image/agri.jpg"> <br>')

						$("#znes_agric2").html('<p id="supérficie_agr"><b>Commune</b>'+' '
						+':'+' '+ feature.properties.NOM_COMMUNE + '</p>'+
						'<p id="supérficie_agr"><b>Supérficie totale</b>'+' '
						+':'+' '+ feature.properties.SURFACE+ 'm2'+'</p>'+
						'<p id="supérficie_agr"><b>type de surface</b>'+' '
						+':'+' '+ feature.properties.DENOM_COMM+ '</p>')
					
					});

					

					layer.bindPopup('<strong>' + 'Numéro de zone:' +feature.properties.NO_ZONE);
			}});

// Ajout des surfaces agricoles si checkbox cochées
			document.querySelector("input[name=zn_1]").addEventListener('change', function() {
				if(this.checked) map.addLayer(zne_agri)
				  else map.removeLayer(zne_agri)
				});



//////////////////////////////////////////////// Paramètre liés aux surface de la zone viticoles////////////////////////////////////////
	
var style_zne_vitic = {
	"color": "brown",
	"weight": 0.2,
	"opacity": 1,
	"fillColor": 'orange',
   };

// paramètres liés à l'interactivité des zones viticoles
zne_vitic = L.geoJSON(zne_viti, { 
	style:style_zne_vitic,

	onEachFeature: function onEachFeature(feature, layer) {

		layer.on('mouseover', function () {
			this.setStyle({
			  'fillColor': 'darkred'
			});
		  });
		layer.on('mouseout', function () {
			this.setStyle({
			  'fillColor': 'orange'
			});
		  });

		  layer.on({click:zoomToFeature});

		layer.on('click', function(){
			document.getElementById("box_droite").style.height = "400px";
			$("#znes_agric1").html('<h4>Surfaces viticoles </h4>'+
			'<img width="150" alt="bla" height="150" src="image/vineyard.jpg"> <br>');

			$("#znes_agric2").html('<p id="supérficie_agr"><b>Commune</b>'+' '
			+':'+' '+ feature.properties.NOM_COMMUNE + '</p>'+
			'<p id="supérficie_agr"><b>Supérficie totale</b>'+' '
			+':'+' '+ feature.properties.SURFACE+ 'm2'+'</p>'+
			'<p id="supérficie_agr"><b>type de surface</b>'+' '
			+':'+' '+ feature.properties.DENOM_COMM+ '</p>')});

			layer.bindPopup('<strong>' + 'Numéro de zone:' +feature.properties.NO_ZONE);
		}});

// Ajout des surfaces viticoles si checkbox cochées
document.querySelector("input[name=zn_2]").addEventListener('change', function() {
	if(this.checked) map.addLayer(zne_vitic)
	  else map.removeLayer(zne_vitic)
	});


//////////////////////////////////////////////// Paramètre liés aux surface des zones de pâturages////////////////////////////////////////
	
var style_zne_patur = {
	"color": "brown",
	"weight": 0.2,
	"opacity": 1,
	"fillColor": 'blue',
   };

// paramètres liés à l'interactivité des zones de pâturage
zne_patur = L.geoJSON(zne_patur, { 
	style:style_zne_patur,

	onEachFeature: function onEachFeature(feature, layer) {

		layer.on('mouseover', function () {
			this.setStyle({
			  'fillColor': 'darkblue'
			});
		  });
		layer.on('mouseout', function () {
			this.setStyle({
			  'fillColor': 'blue'
			});
		  });

		layer.on({click:zoomToFeature});
		layer.on('click', function(){
			document.getElementById("box_droite").style.height = "400px";
			$("#znes_agric1").html('<h4>Surfaces liées aux pâturages </h4>'+
			'<img width="150" alt="bla" height="150" src="image/paturages.jpg"> <br>');

			$("#znes_agric2").html('<p id="supérficie_agr"><b>Commune</b>'+' '
			+':'+' '+ feature.properties.NOM_COMMUNE + '</p>'+
			'<p id="supérficie_agr"><b>Supérficie totale</b>'+' '
			+':'+' '+ feature.properties.SURFACE+ 'm2'+'</p>'+
			'<p id="supérficie_agr"><b>type de surface</b>'+' '
			+':'+' '+ feature.properties.DENOM_COMM+ '</p>')});

		layer.bindPopup('<strong>' + 'Numéro de zone:' +feature.properties.NO_ZONE);
}});

// Ajout des surfaces de pâturage si checkbox cochées
document.querySelector("input[name=zn_3]").addEventListener('change', function() {
	if(this.checked) map.addLayer(zne_patur)
	  else map.removeLayer(zne_patur)
	});

// Ajout d'une couche NDVI

	document.querySelector("input[name=radio]").addEventListener('change', function() {
		if(this.checked){
			map.eachLayer(function (layer) {
				map.removeLayer(layer);
				});

			document.getElementById("box_droite").style.height = "400px";
			$("#znes_agric1").html('<h4>Information relative au calcul du NDVI </h4>'+
			'<img width="150" alt="bla" height="150" src="image/ndvi_ana.jpg"> <br>');
	
			//création de la nouvelle couche
			map.addLayer(Img_sat);
			map.addLayer(ndvi_07);
	
			}
			else(map.removeLayer(ndvi_07));
});
	


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////// Selection des données dont la thématique correspond à la culture/////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


////////////////////////////////////////////////// Affichage des bars ////////////////////////////////////////////////////////////////////

	var bars_icon = L.icon({
		iconUrl: 'C:/Users/user/Documents/GitHub/M-moire_Steven/image/bars.jpg',
		iconSize: [32, 37],
		iconAnchor: [16, 37],
		popupAnchor: [0, -28]
	  });
	
		var bars = L.geoJSON(bars, { 
			onEachFeature: function onEachFeature(feature, layer) {
				layer.bindPopup('<strong>'+feature.properties.name)},
				pointToLayer: function (feature, latlng) {
					return L.marker(latlng, {icon: bars_icon});
					}
				});
	
	document.querySelector("input[name=bars]").addEventListener('change', function() {
		if(this.checked) map.addLayer(bars)
		  else map.removeLayer(bars)
		});


///////////////////////////////////////////////////////////// Affichage des bibliothèques ///////////////////////////////////////////////

	var biblio_icon = L.icon({
		iconUrl: 'C:/Users/user/Documents/GitHub/M-moire_Steven/image/biblio.jpg',
		iconSize: [32, 37],
		iconAnchor: [16, 37],
		popupAnchor: [0, -28]
	  });
	
		var biblio = L.geoJSON(biblio, { 
			onEachFeature: function onEachFeature(feature, layer) {
				layer.bindPopup('<strong>'+feature.properties.name)},
				pointToLayer: function (feature, latlng) {
					return L.marker(latlng, {icon: biblio_icon});
					}
				});
	
	document.querySelector("input[name=biblio]").addEventListener('change', function() {
		if(this.checked) map.addLayer(biblio)
		  else map.removeLayer(biblio)
		});

	
//////////////////////////////////////////////Affichage des cafe////////////////////// /////////////////////////////////////////////////

	var cafe_icon = L.icon({
		iconUrl: 'C:/Users/user/Documents/GitHub/M-moire_Steven/image/cafe.jpg',
		iconSize: [32, 37],
		iconAnchor: [16, 37],
		popupAnchor: [0, -28]
	  });
	
		var cafe = L.geoJSON(cafe, { 
			onEachFeature: function onEachFeature(feature, layer) {
				layer.bindPopup('<strong>'+feature.properties.name)},
				pointToLayer: function (feature, latlng) {
					return L.marker(latlng, {icon: cafe_icon});
					}
				});
	
	document.querySelector("input[name=cafe]").addEventListener('change', function() {
		if(this.checked) map.addLayer(cafe)
		  else map.removeLayer(cafe)
		});


/////////////////////////////////////////////////////////////// Affichage des cinemas ///////////////////////////////////////////////////

	var cine_icon = L.icon({
		iconUrl: 'C:/Users/user/Documents/GitHub/M-moire_Steven/image/cine.jpg',
		iconSize: [32, 37],
		iconAnchor: [16, 37],
		popupAnchor: [0, -28]
	  });
	
		var cine = L.geoJSON(cine, { 
			onEachFeature: function onEachFeature(feature, layer) {
				layer.bindPopup('<strong>'+feature.properties.name)},
				pointToLayer: function (feature, latlng) {
					return L.marker(latlng, {icon: cine_icon});
					}
				});
	
	document.querySelector("input[name=cine]").addEventListener('change', function() {
		if(this.checked) map.addLayer(cine)
		  else map.removeLayer(cine)
		});


////////////////////////////////////////////////////////////////// Affichage des cinemas/////////////////////////////////////////////////

	var muse_icon = L.icon({
		iconUrl: 'C:/Users/user/Documents/GitHub/M-moire_Steven/image/muse.jpg',
		iconSize: [32, 37],
		iconAnchor: [16, 37],
		popupAnchor: [0, -28]
	  });
	
		var muse = L.geoJSON(muse, { 
			onEachFeature: function onEachFeature(feature, layer) {
				layer.bindPopup('<strong>'+feature.properties.NAMN1)},
				pointToLayer: function (feature, latlng) {
					return L.marker(latlng, {icon: muse_icon});
					}
				});
	
	document.querySelector("input[name=muse]").addEventListener('change', function() {
		if(this.checked) map.addLayer(muse)
		  else map.removeLayer(muse)
		});


////////////////////////////////////////////////// Affichage des restaurants/////////////////////////////////////////////////////////

	var resto_icon = L.icon({
		iconUrl: 'C:/Users/user/Documents/GitHub/M-moire_Steven/image/resto_icon.jpg',
		iconSize: [32, 37],
		iconAnchor: [16, 37],
		popupAnchor: [0, -28]
	  });
	
	var resto = L.geoJSON(resto, { 
			onEachFeature: function onEachFeature(feature, layer) {
				layer.bindPopup('<strong>'+feature.properties.name)},
				pointToLayer: function (feature, latlng) {
					return L.marker(latlng, {icon: resto_icon});
					}
				});
	
	document.querySelector("input[name=resto]").addEventListener('change', function() {
		if(this.checked) map.addLayer(resto)
		  else map.removeLayer(resto)
		});


////////////////////////////////////////////////// Affichage des salle de specatles /////////////////////////////////////////////////////////

var gr_salles_icon = L.icon({
	iconUrl: 'C:/Users/user/Documents/GitHub/M-moire_Steven/image/gr_salles.jpg',
	iconSize: [32, 37],
	iconAnchor: [16, 37],
	popupAnchor: [0, -28]
  });

var gr_salles = L.geoJSON(gr_salles, { 
		onEachFeature: function onEachFeature(feature, layer) {
			layer.bindPopup('<strong>'+feature.properties.name)},
			pointToLayer: function (feature, latlng) {
				return L.marker(latlng, {icon: gr_salles_icon});
				}
			});

document.querySelector("input[name=gr_salles]").addEventListener('change', function() {
	if(this.checked) map.addLayer(gr_salles)
	  else map.removeLayer(gr_salles)
	});


////////////////////////////////////////////////// Affichage des théatres /////////////////////////////////////////////////////////

var theatre_icon = L.icon({
	iconUrl: 'C:/Users/user/Documents/GitHub/M-moire_Steven/image/theatre.jpg',
	iconSize: [32, 37],
	iconAnchor: [16, 37],
	popupAnchor: [0, -28]
  });

var theatres = L.geoJSON(theatres, { 
		onEachFeature: function onEachFeature(feature, layer) {
			layer.bindPopup('<strong>'+feature.properties.name)},
			pointToLayer: function (feature, latlng) {
				return L.marker(latlng, {icon: theatre_icon});
				}
			});

document.querySelector("input[name=theatre]").addEventListener('change', function() {
	if(this.checked) map.addLayer(theatres)
	  else map.removeLayer(theatres)
	});






/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////// Selection des données dont la thématique correspond à la démographie//////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



/////////////////////////////////// Affichage indicateur taux de natalité ////////////////////////////////////////////////////////////////

// fonction qui permettre de mettre en évidence des polygone quand la souris passe par dessus
function highlightFeature(e) {
    var layer = e.target;
    layer.setStyle({
        weight: 5,
        color: '#666',
        dashArray: '',
        fillOpacity: 0.7
    });
    layer.bringToFront();
}




function zoomToFeature(e) {
    map.fitBounds(e.target.getBounds());
}


//fonction pour l'affichage des indicateurs "taux de naissace " en couleur
function getColor(d) {
    return d > 1.2 ? '#800026' :
           d> 1  ? '#BD0026' :
           d> 0.8  ? '#E31A1C' :
           d> 0.6 ?  '#FC4E2A' :
                      '#FFEDA0';
}

style_naiss = function style(feature) {
	return {
		fillColor: getColor(feature.properties.t_natalite),
		weight: 2,
		opacity: 1,
		color: 'white',
		dashArray: '3',
		fillOpacity: 0.7
	};
}

//ajout de la couche permettant de voir le taux de naissance sur la carte
t_naissance = L.geoJSON(taux_naissance, {
	style: style_naiss,

	onEachFeature: function onEachFeature(feature, layer) {
		layer.on({
			mouseover: highlightFeature,
			mouseout: function resetHighlight(e) {
				t_naissance.resetStyle(e.target);
			}});

			layer.on('click', function(){
				document.getElementById("box_droite").style.height = "420px";
			$("#znes_agric1").html('<h4>NAISSANCES</h4>'+ '<br>' +
			'<img width="100" alt="bla" height="100" src="image/baby.png"> ');

			$("#znes_agric2").html('<p id="supérficie_agr"><b>Commune</b>'+' '
			+':'+' '+ feature.properties.NAME + '<br>' +'<br>' +
			'<b>Nombre de naissances</b>'+' '
			+':'+' '+ feature.properties.Naissance_vivante + '<br>' +'<br>' +
			'<b>Nombre total habitants </b>'+' '
			+':'+' '+ feature.properties.Effectif_janvier + 
			'</p>')});

			layer.bindPopup('<strong>' + 'Taux de natalité:' +feature.properties.t_natalite+'%');

		}});

document.querySelector("input[name=ta_naissance]").addEventListener('change', function() {
	if(this.checked) map.addLayer(t_naissance)
	map.removeLayer(t_deces)
	map.removeLayer(t_f)
	map.removeLayer(t_h)


	document.querySelector("input[name=ta_deces]").checked = false;
	document.querySelector("input[name=ta_femme]").checked = false;
	document.querySelector("input[name=ta_homme]").checked = false;

	});



/////////////////////////////////// Affichage indicateur taux de décès ////////////////////////////////////////////////////////////////



//fonction pour l'affichage des indicateurs "taux de naissace " en couleur
function getColore(d) {
    return d > 1.1 ? '#800026' :
           d> 0.9  ? '#BD0026' :
           d> 0.7  ? '#E31A1C' :
           d> 0.5 ?  '#FC4E2A' :
                      '#FFEDA0';
}

style_deces = function style(feature) {
	return {
		fillColor: getColore(feature.properties.t_deces),
		weight: 2,
		opacity: 1,
		color: 'white',
		dashArray: '3',
		fillOpacity: 0.7
	};
}

//ajout de la couche permettant de voir le taux de naissance sur la carte
t_deces = L.geoJSON(taux_deces, {
	style: style_deces,

	onEachFeature: function onEachFeature(feature, layer) {
		layer.on({
			mouseover: highlightFeature,
			mouseout: function resetHighlight(e) {
				t_deces.resetStyle(e.target);
			}});

			layer.on('click', function(){
				document.getElementById("box_droite").style.height = "420px";
			$("#znes_agric1").html('<h4>DECES</h4>'+ '<br>' +
			'<img width="100" alt="bla" height="100" src="image/death.png"> ');

			$("#znes_agric2").html('<p id="supérficie_agr"><b>Commune</b>'+' '
			+':'+' '+ feature.properties.NAME + '<br>' +'<br>' +
			'<b>Nombre de décès</b>'+' '
			+':'+' '+ feature.properties.Deces + '<br>' +'<br>' +
			'<b>Nombre total habitants </b>'+' '
			+':'+' '+ feature.properties.Effectif_janvier + 
			'</p>')})

			layer.bindPopup('<strong>' + 'Taux de mortalité:' +feature.properties.t_deces+'%');

		}});

document.querySelector("input[name=ta_deces]").addEventListener('change', function() {
	if(this.checked) map.addLayer(t_deces)

	map.removeLayer(t_naissance)
	map.removeLayer(t_f)
	map.removeLayer(t_h)



	document.querySelector("input[name=ta_naissance]").checked = false;
	document.querySelector("input[name=ta_femme]").checked = false;
	document.querySelector("input[name=ta_homme]").checked = false;

	});



/////////////////////////////////// Affichage indicateur taux de femmes ////////////////////////////////////////////////////////////////



//fonction pour l'affichage des indicateurs "taux de naissace " en couleur
function getColoreee(d) {
    return d > 0.52 ? '#800026' :
           d> 0.51  ? '#BD0026' :
           d> 0.5  ? '#E31A1C' :
           d> 0.49 ?  '#FC4E2A' :
                      '#FFEDA0';
}

style_f = function style(feature) {
	return {
		fillColor: getColoreee(feature.properties.prop_f),
		weight: 2,
		opacity: 1,
		color: 'white',
		dashArray: '3',
		fillOpacity: 0.7
	};
}

//ajout de la couche permettant de voir le taux de naissance sur la carte
t_f = L.geoJSON(prop_hommes_femmes, {
	style: style_f,

	onEachFeature: function onEachFeature(feature, layer) {
		layer.on({
			mouseover: highlightFeature,
			mouseout: function resetHighlight(e) {
				t_f.resetStyle(e.target);
			}});

			layer.on('click', function(){
				document.getElementById("box_droite").style.height = "420px";
			$("#znes_agric1").html('<h4>Population feminine</h4>'+ '<br>' +
			'<img width="100" alt="bla" height="100" src="image/femmes.png"> ');

			$("#znes_agric2").html('<p id="supérficie_agr"><b>Commune</b>'+' '
			+':'+' '+ feature.properties.NAME + '<br>' +'<br>' +
			'<b>Nombre de femmes</b>'+' '
			+':'+' '+ feature.properties.fe + '<br>' +'<br>' +
			'<b>Nombre total habitants </b>'+' '
			+':'+' '+ feature.properties.tot + 
			'</p>')})

			layer.bindPopup('<strong>' + 'Proportion de femmes:' +feature.properties.prop_f+'%');

		}});

document.querySelector("input[name=ta_femme]").addEventListener('change', function() {
	if(this.checked) map.addLayer(t_f)

	map.removeLayer(t_naissance)
	map.removeLayer(t_deces)
	map.removeLayer(t_h)


	document.querySelector("input[name=ta_naissance]").checked = false;
	document.querySelector("input[name=ta_deces]").checked = false;
	document.querySelector("input[name=ta_homme]").checked = false;

	});




/////////////////////////////////// Affichage indicateur taux de homme ////////////////////////////////////////////////////////////////

//fonction pour l'affichage des indicateurs "taux de naissace " en couleur
function getColoreeee(d) {
    return d > 0.51 ? '#800026' :
           d> 0.5  ? '#BD0026' :
           d> 0.49  ? '#E31A1C' :
           d> 0.48 ?  '#FC4E2A' :
                      '#FFEDA0';
}

style_h = function style(feature) {
	return {
		fillColor: getColoreee(feature.properties.prop_h),
		weight: 2,
		opacity: 1,
		color: 'white',
		dashArray: '3',
		fillOpacity: 0.7
	};
}

//ajout de la couche permettant de voir le taux de naissance sur la carte
t_h = L.geoJSON(prop_hommes_femmes, {
	style: style_h,

	onEachFeature: function onEachFeature(feature, layer) {
		layer.on({
			mouseover: highlightFeature,
			mouseout: function resetHighlight(e) {
				t_h.resetStyle(e.target);
			}});

			layer.on('click', function(){
				document.getElementById("box_droite").style.height = "420px";
			$("#znes_agric1").html('<h4>Population masculine</h4>'+ '<br>' +
			'<img width="100" alt="bla" height="100" src="image/homme.png"> ');

			$("#znes_agric2").html('<p id="supérficie_agr"><b>Commune</b>'+' '
			+':'+' '+ feature.properties.NAME + '<br>' +'<br>' +
			'<b>Nombre hommes </b>'+' '
			+':'+' '+ feature.properties.ho + '<br>' +'<br>' +
			'<b>Nombre total habitants </b>'+' '
			+':'+' '+ feature.properties.tot + 
			'</p>')})

			layer.bindPopup('<strong>' + 'Proportion hommes:' +feature.properties.prop_h+'%');

		}});

document.querySelector("input[name=ta_homme]").addEventListener('change', function() {
	if(this.checked) map.addLayer(t_h)

	map.removeLayer(t_naissance)
	map.removeLayer(t_deces)
	map.removeLayer(t_f)


	document.querySelector("input[name=ta_naissance]").checked = false;
	document.querySelector("input[name=ta_deces]").checked = false;
	document.querySelector("input[name=ta_femme]").checked = false;


	});






	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////// Selection des données dont la thématique correspond à l'économie'//////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


/////////////////////////////////// Affichage indicateur pop active  ////////////////////////////////////////////////////////////////

//fonction pour l'affichage des indicateurs "population active " en couleur
function getColorecoa(d) {
    return d > 0.75 ? '#800026' :
           d> 0.7  ? '#BD0026' :
           d> 0.65  ? '#E31A1C' :
           d> 0.55 ?  '#FC4E2A' :
                      '#FFEDA0';
}

style_act = function style(feature) {
	return {
		fillColor: getColorecoa(feature.properties.part_pop_active),
		weight: 2,
		opacity: 1,
		color: 'white',
		dashArray: '3',
		fillOpacity: 0.7
	};
}

p_act = L.geoJSON(chom_act, {
	style: style_act,

	onEachFeature: function onEachFeature(feature, layer) {
		layer.on({
			mouseover: highlightFeature,
			mouseout: function resetHighlight(e) {
				p_act.resetStyle(e.target);
			}});

			layer.on('click', function(){
				document.getElementById("box_droite").style.height = "420px";
			$("#znes_agric1").html('<h4>Population active (2000)</h4>'+ '<br>' +
			'<img width="100" alt="bla" height="100" src="image/pop_act.png"> ');

			$("#znes_agric2").html('<p id="supérficie_agr"><b>Commune</b>'+' '
			+':'+' '+ feature.properties.NAME + '<br>' +'<br>' +
			'<b>Nombre de personnes actives</b>'+' '
			+':'+' '+ feature.properties.pers_active + '<br>' +'<br>' +
			'<b>Nombre emplois total </b>'+' '
			+':'+' '+ feature.properties.Tot_sect + 
			'</p>')});

			layer.bindPopup('<strong>' + 'Part de personnes actives:' +feature.properties.part_pop_active+'%');

		}});

document.querySelector("input[name=pop_act]").addEventListener('change', function() {
	if(this.checked) map.addLayer(p_act)

	map.removeLayer(p_sect_primaire)
	map.removeLayer(p_sect_secondaire)
	map.removeLayer(p_sect_tertiaire)
	map.removeLayer(p_chom)

	document.querySelector("input[name=ta_chomage]").checked = false;
	document.querySelector("input[name=sec_prim]").checked = false;
	document.querySelector("input[name=prop_emp_sec]").checked = false;
	document.querySelector("input[name=prop_emp_ter]").checked = false;


	});



/////////////////////////////////// Affichage indicateur chômage  ////////////////////////////////////////////////////////////////

//fonction pour l'affichage des indicateurs "population active " en couleur
function getColorecho(d) {
    return d > 0.025 ? '#800026' :
           d> 0.02  ? '#BD0026' :
           d> 0.014  ? '#E31A1C' :
           d> 0.012 ?  '#FC4E2A' :
                      '#FFEDA0';
}

style_chom = function style(feature) {
	return {
		fillColor: getColorecho(feature.properties.ta_chom),
		weight: 2,
		opacity: 1,
		color: 'white',
		dashArray: '3',
		fillOpacity: 0.7
	};
}

p_chom = L.geoJSON(chom_act, {
	style: style_chom,

	onEachFeature: function onEachFeature(feature, layer) {
		layer.on({
			mouseover: highlightFeature,
			mouseout: function resetHighlight(e) {
				p_chom.resetStyle(e.target);
			}});

			layer.on('click', function(){
				document.getElementById("box_droite").style.height = "420px";
			$("#znes_agric1").html('<h4>Population au chômage</h4>'+ '<br>' +
			'<img width="100" alt="bla" height="100" src="image/chomage.png"> ');

			$("#znes_agric2").html('<p id="supérficie_agr"><b>Commune</b>'+' '
			+':'+' '+ feature.properties.NAME + '<br>' +'<br>' +
			'<b>Nombre de personnes au chômage</b>'+' '
			+':'+' '+ feature.properties.chomage + '<br>' +'<br>' +
			'<b>Nombre emplois total </b>'+' '
			+':'+' '+ feature.properties.Tot_sect + 
			'</p>')});

			layer.bindPopup('<strong>' + 'Part de personnes actives:' +feature.properties.ta_chom+'%');

		}});

document.querySelector("input[name=ta_chomage]").addEventListener('change', function() {
	if(this.checked) map.addLayer(p_chom)

	map.removeLayer(p_sect_primaire)
	map.removeLayer(p_sect_secondaire)
	map.removeLayer(p_sect_tertiaire)
	map.removeLayer(p_act)

	document.querySelector("input[name=pop_act]").checked = false;
	document.querySelector("input[name=sec_prim]").checked = false;
	document.querySelector("input[name=prop_emp_sec]").checked = false;
	document.querySelector("input[name=prop_emp_ter]").checked = false;


	});


/////////////////////////////////// Affichage indicateur prop secteur primaire  ////////////////////////////////////////////////////////////////

//fonction pour l'affichage des indicateurs "taux de naissace " en couleur
function getColoreco(d) {
    return d > 0.5 ? '#800026' :
           d> 0.2  ? '#BD0026' :
           d> 0.08  ? '#E31A1C' :
           d> 0.04 ?  '#FC4E2A' :
                      '#FFEDA0';
}

style_sect_prim = function style(feature) {
	return {
		fillColor: getColoreco(feature.properties.prop_prim),
		weight: 2,
		opacity: 1,
		color: 'white',
		dashArray: '3',
		fillOpacity: 0.7
	};
}

//ajout de la couche permettant de voir le taux de naissance sur la carte
p_sect_primaire = L.geoJSON(sect_economique, {
	style: style_sect_prim,

	onEachFeature: function onEachFeature(feature, layer) {
		layer.on({
			mouseover: highlightFeature,
			mouseout: function resetHighlight(e) {
				p_sect_primaire.resetStyle(e.target);
			}});

			layer.on('click', function(){
				document.getElementById("box_droite").style.height = "420px";
			$("#znes_agric1").html('<h4>Secteur primaire</h4>'+ '<br>' +
			'<img width="100" alt="bla" height="100" src="image/sec_prim.png"> ');

			$("#znes_agric2").html('<p id="supérficie_agr"><b>Commune</b>'+' '
			+':'+' '+ feature.properties.NAME + '<br>' +'<br>' +
			'<b>Emplois dans le secteur primaire</b>'+' '
			+':'+' '+ feature.properties.Sect_prim + '<br>' +'<br>' +
			'<b>Nombre emplois total </b>'+' '
			+':'+' '+ feature.properties.Tot_sect + 
			'</p>')});

			layer.bindPopup('<strong>' + 'Part emplois secteur primaire:' +feature.properties.prop_prim+'%');

		}});

document.querySelector("input[name=sec_prim]").addEventListener('change', function() {
	if(this.checked) map.addLayer(p_sect_primaire)

	map.removeLayer(p_act)
	map.removeLayer(p_sect_tertiaire)
	map.removeLayer(p_sect_tertiaire)
	map.removeLayer(p_chom)

	document.querySelector("input[name=ta_chomage]").checked = false;
	document.querySelector("input[name=pop_act]").checked = false;
	document.querySelector("input[name=prop_emp_sec]").checked = false;
	document.querySelector("input[name=prop_emp_ter]").checked = false;


	});




/////////////////////////////////// Affichage indicateur prop secteur primaire  ////////////////////////////////////////////////////////////////

//fonction pour l'affichage des indicateurs "taux de naissace " en couleur
function getColorecosec(d) {
    return d > 0.5 ? '#800026' :
           d> 0.4  ? '#BD0026' :
           d> 0.2  ? '#E31A1C' :
           d> 0.1 ?  '#FC4E2A' :
                      '#FFEDA0';
}

style_sect_sec = function style(feature) {
	return {
		fillColor: getColorecosec(feature.properties.prop_sec),
		weight: 2,
		opacity: 1,
		color: 'white',
		dashArray: '3',
		fillOpacity: 0.7
	};
}

//ajout de la couche permettant de voir le taux de naissance sur la carte
p_sect_secondaire = L.geoJSON(sect_economique, {
	style: style_sect_sec,

	onEachFeature: function onEachFeature(feature, layer) {
		layer.on({
			mouseover: highlightFeature,
			mouseout: function resetHighlight(e) {
				p_sect_secondaire.resetStyle(e.target);
			}});

			layer.on('click', function(){
				document.getElementById("box_droite").style.height = "420px";
			$("#znes_agric1").html('<h4>Secteur secondaire</h4>'+ '<br>' +
			'<img width="100" alt="bla" height="100" src="image/sect_sec.png"> ');

			$("#znes_agric2").html('<p id="supérficie_agr"><b>Commune</b>'+' '
			+':'+' '+ feature.properties.NAME + '<br>' +'<br>' +
			'<b>Emplois dans le secteur secondaire</b>'+' '
			+':'+' '+ feature.properties.Sect_sec + '<br>' +'<br>' +
			'<b>Nombre emmplois total </b>'+' '
			+':'+' '+ feature.properties.Tot_sect + 
			'</p>')});

			layer.bindPopup('<strong>' + 'Part emplois secteur secondaire:' +feature.properties.prop_sec+'%');

		}});

document.querySelector("input[name=prop_emp_sec]").addEventListener('change', function() {
	if(this.checked) map.addLayer(p_sect_secondaire)

	map.removeLayer(p_sect_primaire)
	map.removeLayer(p_sect_tertiaire)
	map.removeLayer(p_chom)
	map.removeLayer(p_act)

	document.querySelector("input[name=pop_act]").checked = false;
	document.querySelector("input[name=ta_chomage]").checked = false;
	document.querySelector("input[name=sec_prim]").checked = false;
	document.querySelector("input[name=prop_emp_ter]").checked = false;


	});




	/////////////////////////////////// Affichage indicateur prop secteur tertiaire  ////////////////////////////////////////////////////////////////

//fonction pour l'affichage de l'indicateur "proportion d'emploi secteur tertiaire " en couleur
function getColorecoter(d) {
    return d > 0.8 ? '#800026' :
           d> 0.65  ? '#BD0026' :
           d> 0.5  ? '#E31A1C' :
           d> 0.3 ?  '#FC4E2A' :
                      '#FFEDA0';
}

style_sect_ter = function style(feature) {
	return {
		fillColor: getColorecoter(feature.properties.prop_tert),
		weight: 2,
		opacity: 1,
		color: 'white',
		dashArray: '3',
		fillOpacity: 0.7
	};
}

//ajout de la couche permettant de voir le taux de naissance sur la carte
p_sect_tertiaire = L.geoJSON(sect_economique, {
	style: style_sect_ter,

	onEachFeature: function onEachFeature(feature, layer) {
		layer.on({
			mouseover: highlightFeature,
			mouseout: function resetHighlight(e) {
				p_sect_tertiaire.resetStyle(e.target);
			}});

			layer.on('click', function(){
				document.getElementById("box_droite").style.height = "420px";
			$("#znes_agric1").html('<h4>Secteur tertiaire</h4>'+ '<br>' +
			'<img width="100" alt="bla" height="100" src="image/sec_ter.png"> ');

			$("#znes_agric2").html('<p id="supérficie_agr"><b>Commune</b>'+' '
			+':'+' '+ feature.properties.NAME + '<br>' +'<br>' +
			'<b>Emplois dans le secteur tertiaire</b>'+' '
			+':'+' '+ feature.properties.Sect_tert + '<br>' +'<br>' +
			'<b>Nombre emmplois total </b>'+' '
			+':'+' '+ feature.properties.Tot_sect + 
			'</p>')});

			layer.bindPopup('<strong>' + 'Part emplois secteur tertiaire:' +feature.properties.prop_tert+'%');

		}});

document.querySelector("input[name=prop_emp_ter]").addEventListener('change', function() {
	if(this.checked) map.addLayer(p_sect_tertiaire)

	map.removeLayer(p_sect_primaire)
	map.removeLayer(p_sect_secondaire)
	map.removeLayer(p_chom)
	map.removeLayer(p_act)

	document.querySelector("input[name=pop_act]").checked = false;
	document.querySelector("input[name=ta_chomage]").checked = false;
	document.querySelector("input[name=sec_prim]").checked = false;
	document.querySelector("input[name=prop_emp_sec]").checked = false;


	});



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////// Selection des données dont la thématique correspond à l'environnement'/////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



document.querySelector("input[name=NDVI1]").addEventListener('change', function() {
	if(this.checked){

		map.eachLayer(function (layer) {
			map.removeLayer(layer);
		});

		NDVI2.checked = false;
		NDVI3.checked = false;
		NDVI4.checked = false;
		NDVI5.checked = false;
		NDVI6.checked = false;
		NDVI7.checked = false;

	//création de la nouvelle couche

	map.addLayer(esri);
	map.addLayer(ndvi_01)

}});


document.querySelector("input[name=NDVI2]").addEventListener('change', function() {
	if(this.checked){
		map.eachLayer(function (layer) {
			map.removeLayer(layer);
		});

		NDVI1.checked = false;
		NDVI3.checked = false;
		NDVI4.checked = false;
		NDVI5.checked = false;
		NDVI6.checked = false;
		NDVI7.checked = false;

	//création de la nouvelle couche

	map.addLayer(esri);
	map.addLayer(ndvi_03)

}});

document.querySelector("input[name=NDVI3]").addEventListener('change', function() {
	if(this.checked){
		map.eachLayer(function (layer) {
			map.removeLayer(layer);
		});

		NDVI1.checked = false;
		NDVI2.checked = false;
		NDVI4.checked = false;
		NDVI5.checked = false;
		NDVI6.checked = false;
		NDVI7.checked = false;

	//création de la nouvelle couche
	map.addLayer(esri);
	map.addLayer(ndvi_05)
}});

document.querySelector("input[name=NDVI4]").addEventListener('change', function() {
	if(this.checked){
		map.eachLayer(function (layer) {
			map.removeLayer(layer);
		});

		NDVI1.checked = false;
		NDVI3.checked = false;
		NDVI2.checked = false;
		NDVI5.checked = false;
		NDVI6.checked = false;
		NDVI7.checked = false;

	//création de la nouvelle couche
	map.addLayer(esri);
	map.addLayer(ndvi_07)
}});


document.querySelector("input[name=NDVI5]").addEventListener('change', function() {
	if(this.checked){

		map.eachLayer(function (layer) {
			map.removeLayer(layer);
		});
		

		NDVI1.checked = false;
		NDVI3.checked = false;
		NDVI4.checked = false;
		NDVI2.checked = false;
		NDVI6.checked = false;
		NDVI7.checked = false;

		map.addLayer(esri);
		map.addLayer(ndvi_09)
}});


document.querySelector("input[name=NDVI6]").addEventListener('change', function() {
	if(this.checked){

		map.eachLayer(function (layer) {
			map.removeLayer(layer);
		});

		NDVI1.checked = false;
		NDVI3.checked = false;
		NDVI4.checked = false;
		NDVI5.checked = false;
		NDVI2.checked = false;
		NDVI7.checked = false;

	//création de la nouvelle couche
	map.addLayer(esri);
	map.addLayer(ndvi_10);
}});

document.querySelector("input[name=NDVI7]").addEventListener('change', function() {
	if(this.checked){

		map.eachLayer(function (layer) {
			map.removeLayer(layer);
		});

		NDVI1.checked = false;
		NDVI3.checked = false;
		NDVI4.checked = false;
		NDVI5.checked = false;
		NDVI6.checked = false;
		NDVI2.checked = false;

	//création de la nouvelle couche
	map.addLayer(esri);
	map.addLayer(ndvi_12);
}});




////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////// Selection des données dont la thématique correspond au territoire'/////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


/// ajout d'une couche mnt
document.querySelector("input[name=mnt]").addEventListener('change', function() {
	if(this.checked) map.addLayer(mnt)
	  else map.removeLayer(mnt)
	});

/// ajout couche ligne de niveau
var style_ligne_niveau = {
	"color": "black",
	"weight": 0.6,
   };

var click_style = {
	'color': 'red',
	'weight': 2
}



   ligne_niveau = L.geoJSON(lignes_niv, { 
	style:style_ligne_niveau,



	onEachFeature: function onEachFeature(feature, layer) {

		layer.on('click', function(){
			this.setStyle(style_ligne_niveau)
		})

		layer.on('mouseover', function () {
			this.setStyle({
			  'color': 'red',
			  'weight': 2,
			});
		  });
		layer.on('mouseout', function () {
			this.setStyle(style_ligne_niveau);
		  });

		layer.on('click', function(){
			this.setStyle(click_style);
		});

		  layer.bindPopup('<strong>' + 'Altitude:' +feature.properties.ALTITUDE);
		}});
	
	// Ajout des ligne de niveau si checkbox cochées
document.querySelector("input[name=lig_niv]").addEventListener('change', function() {
	if(this.checked) map.addLayer(ligne_niveau)
	  else map.removeLayer(ligne_niveau)
	});
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////Fonction qui perment d'ouvrir et de fermer la section liée aux outils de mesure/////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


	  function openMD() {
		document.getElementById("OuvrirMD").style.height = "260px";
		document.getElementById("OuvrirMD").style.backgroundColor = 'lightgrey' ; 
		document.getElementById("boutonMD").style.backgroundColor = 'grey' ; 
		document.getElementById("OuvrirMD").style.borderBottomLeftRadius = '5px'; 
		document.getElementById("OuvrirMD").style.borderBottomrightRadius = '5px';
		document.getElementById("OpenMD").style.backgroundColor = 'grey' ;
		document.getElementById("OpenMD").style.color = 'white' ;
	  }	

	  function closeMD(){
		document.getElementById("OuvrirMD").style.height = "0px";
		document.getElementById("boutonMD").style.backgroundColor = '#111' ; 
		document.getElementById("OpenMD").style.backgroundColor = '#111' ;
		document.getElementById("OpenMD").style.color = '#818181' ;

	  }


///////////////////////////////////////////////Outils de mesure////////////////////////////////////////////////////////////////////////



var featureGroup = L.featureGroup().addTo(map);

        var drawControl = new L.Control.Draw({
        edit: {
            featureGroup: featureGroup
        },
        draw: {
            polygon: false, 
            polyline: {
				shapeOptions: {
					color: 'red',
				},
				metric: false,
				feet: true,
			},
            rectangle: false,
            circle: false,
            marker: false
        }
    });


// Modification de l'icon du marker
L.Marker.prototype.options.icon = L.icon({
    iconUrl: 'C:/Users/user/Documents/GitHub/M-moire_Steven/image/marker.jpg',
	iconSize: [30, 40],
});


/// Ajout des marqueurs///
function Marqueur_Act(){
	var options_marqueurs ={
		drawMarker:false,
		snappable: true,
  		snapDistance: 20,
		};
	map.pm.enableDraw('Marker', options_marqueurs);	
};
// Fonction permettant d'arrêter d'ajouter des marqueurs sur la carte
function Marqueur_Inact(){
	map.pm.disableDraw('Marker');
};


/// Ajout outil mesures de distances ///
function Mesure_Distance_Act(){
	var options_mesure_distance ={
		drawLine:false,
		snappable: true,
  		snapDistance: 20,
		};
	map.pm.enableDraw('Line', options_mesure_distance);	
};


/// Ajout outils mesures de surfaces ///
function Mesure_surface_Act(){
	var options_mesure_surfaces ={
		drawPolyLine:false,
		snappable: true,
  		snapDistance: 20,
		};
	map.pm.enableDraw('Poly', options_mesure_surfaces);
};


/// Ajout outils pour effacer les mesures précédentes ///
function effacer(){
		map.pm.toggleGlobalRemovalMode();
};


// Fonction permettant de changer la couleur des boutons lorsqu'on click dessus
$( "button#Marqueur_Act" ).click(function() {
	$( "button#Marqueur_Act" ).css('background', '#7c92cf');
	$("button#Marqueur_Inact").css('background', '#F0F0F0');
	$("button#Mesure_Distance_Act").css('background', '#F0F0F0');
	$("button#Mesure_surface_Act").css('background', '#F0F0F0');
	$("button#delete").css('background', '#F0F0F0');
  });

$( "button#Marqueur_Inact" ).click(function() {
	$( "button#Marqueur_Inact" ).css('background', '#7c92cf');
	$("button#Marqueur_Act").css('background', '#F0F0F0');
	$("button#Mesure_Distance_Act").css('background', '#F0F0F0');
	$("button#Mesure_surface_Act").css('background', '#F0F0F0');
	$("button#delete").css('background', '#F0F0F0');
  });

$( "button#Mesure_Distance_Act" ).click(function() {
	$( "button#Mesure_Distance_Act" ).css('background', '#7c92cf');
	$("button#Marqueur_Inact").css('background', '#F0F0F0');
	$("button#Marqueur_Act").css('background', '#F0F0F0');
	$("button#Mesure_surface_Act").css('background', '#F0F0F0');
	$("button#delete").css('background', '#F0F0F0');
  });

$( "button#Mesure_surface_Act" ).click(function() {
	$( "button#Mesure_surface_Act" ).css('background', '#7c92cf');
	$("button#Marqueur_Inact").css('background', '#F0F0F0');
	$("button#Mesure_Distance_Act").css('background', '#F0F0F0');
	$("button#Marqueur_Act").css('background', '#F0F0F0');
	$("button#delete").css('background', '#F0F0F0');
  });

  $( "button#delete" ).click(function() {
	$( "button#delete" ).css('background', '#7c92cf');
	$("button#Marqueur_Inact").css('background', '#F0F0F0');
	$("button#Mesure_Distance_Act").css('background', '#F0F0F0');
	$("button#Marqueur_Act").css('background', '#F0F0F0');
	$("button#Mesure_surface_Act").css('background', '#F0F0F0');
  });


	


	// Fonction qui perment d'ouvrir et de fermer la section liée au droits du projet
	  function openDroits() {
		document.getElementById("OuvrirDroits").style.height = "300px";
		document.getElementById("OuvrirDroits").style.backgroundColor = 'lightgrey' ; 
		document.getElementById("boutonDroits").style.backgroundColor = 'grey' ; 
		document.getElementById("OuvrirDroits").style.borderBottomLeftRadius = '5px'; 
		document.getElementById("OuvrirDroits").style.borderBottomrightRadius = '5px';
		document.getElementById("OpenDroits").style.backgroundColor = 'grey' ;
		document.getElementById("OpenDroits").style.color = 'white' ;
		document.getElementById("mySidebar").style.height = "75%";

	  }	

	  function closeDroits(){
		document.getElementById("OuvrirDroits").style.height = "0px";
		document.getElementById("boutonDroits").style.backgroundColor = '#111' ; 
		document.getElementById("OpenDroits").style.backgroundColor = '#111' ;
		document.getElementById("OpenDroits").style.color = '#818181' ;
		document.getElementById("mySidebar").style.height = "65%";

	  }

	  function openDth() {
		document.getElementById("OuvrirDth").style.height = "260px";
		document.getElementById("OuvrirDth").style.backgroundColor = 'lightgrey' ; 
		document.getElementById("boutonDth").style.backgroundColor = 'grey' ; 
		document.getElementById("OuvrirDth").style.borderBottomLeftRadius = '5px'; 
		document.getElementById("OuvrirDth").style.borderBottomrightRadius = '5px'; 
		document.getElementById("OpenDth").style.backgroundColor = 'grey' ;
		document.getElementById("OpenDth").style.color = 'white' ;
	  }	;

	  function closeDth(){
		document.getElementById("OuvrirDth").style.height = "0px";
		document.getElementById("boutonDth").style.backgroundColor = '#111' ; 
		document.getElementById("OpenDth").style.backgroundColor = '#111' ;
		document.getElementById("OpenDth").style.color = '#818181' ;

	  };